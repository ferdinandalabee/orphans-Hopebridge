'use client';

import { Button } from '@/components/ui/button';
import { Card, CardContent, CardHeader, CardTitle, CardFooter } from '@/components/ui/card';
import { PlusCircle, Users, Heart, Gift, Activity, BarChart3, UserPlus } from 'lucide-react';
import Link from 'next/link';
import { useRouter } from 'next/navigation';
import { useEffect, useState } from 'react';
import { toast } from 'sonner';

// StatCard Component
type StatCardProps = {
  title: string;
  value: number;
  icon: React.ReactNode;
  trend: string;
};

function StatCard({ title, value, icon, trend }: StatCardProps) {
  return (
    <Card className="p-6">
      <div className="flex justify-between">
        <div>
          <p className="text-sm font-medium text-gray-500">{title}</p>
          <p className="text-2xl font-bold mt-1">{value}</p>
          <p className="text-xs text-green-600 mt-2">{trend}</p>
        </div>
        <div className="h-12 w-12 rounded-full bg-gray-100 flex items-center justify-center">
          {icon}
        </div>
      </div>
    </Card>
  );
}

type Orphanage = {
  id: string;
  name: string;
  email: string;
  phone: string;
  address: string;
  city: string;
  state: string;
  country: string;
  description: string;
  capacity: number;
};

type Child = {
  id: string;
  firstName: string;
  lastName: string;
  dateOfBirth: string;
  gender: string;
  isAdopted: boolean;
};

export default function OrphanageDashboard() {
  const router = useRouter();
  const [orphanage, setOrphanage] = useState<Orphanage | null>(null);
  const [children, setChildren] = useState<Child[]>([]);
  const [loading, setLoading] = useState(true);
  const [stats, setStats] = useState({
    totalChildren: 0,
    availableForAdoption: 0,
    adopted: 0,
    recentActivity: 0
  });

  useEffect(() => {
    const fetchData = async () => {
      try {
        // Fetch orphanage data
        const [orphanageRes, childrenRes] = await Promise.all([
          fetch('/api/orphanage/register'),
          fetch('/api/orphanage/children')
        ]);

        if (!orphanageRes.ok || !childrenRes.ok) {
          throw new Error('Failed to fetch data');
        }

        const [orphanageData, childrenData] = await Promise.all([
          orphanageRes.json(),
          childrenRes.json()
        ]);

        if (orphanageData.data && orphanageData.data.length > 0) {
          setOrphanage(orphanageData.data[0]);
        }

        if (childrenData.data) {
          setChildren(childrenData.data);
          setStats({
            totalChildren: childrenData.data.length,
            availableForAdoption: childrenData.data.filter((c: Child) => !c.isAdopted).length,
            adopted: childrenData.data.filter((c: Child) => c.isAdopted).length,
            recentActivity: Math.min(childrenData.data.length, 5)
          });
        }
      } catch (error) {
        console.error('Error fetching data:', error);
        toast.error('Failed to load dashboard data');
      } finally {
        setLoading(false);
      }
    };

    fetchData();
  }, []);

  if (loading) {
    return (
      <div className="flex items-center justify-center min-h-screen">
        <div className="animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-blue-500"></div>
      </div>
    );
  }


  if (!orphanage) {
    return (
      <div className="flex flex-col items-center justify-center min-h-screen p-4">
        <Card className="w-full max-w-2xl">
          <CardHeader>
            <CardTitle>No Orphanage Found</CardTitle>
            <p className="text-sm text-gray-500">
              You haven't registered an orphanage yet. Please register your orphanage to continue.
            </p>
          </CardHeader>
          <CardContent>
            <Button asChild>
              <Link href="/dashboard/orphanage/register">
                Register Orphanage
              </Link>
            </Button>
          </CardContent>
        </Card>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gray-50">
      {/* Header */}
      <header className="bg-white shadow">
        <div className="max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8 flex justify-between items-center">
          <div>
            <h1 className="text-3xl font-bold text-gray-900">Dashboard</h1>
            <p className="text-sm text-gray-500">Welcome back, {orphanage.name}</p>
          </div>
          <Button asChild>
            <Link href="/dashboard/orphanage/children/new" className="flex items-center">
              <UserPlus className="mr-2 h-4 w-4" />
              Add New Child
            </Link>
          </Button>
        </div>
      </header>

      <main className="max-w-7xl mx-auto py-6 sm:px-6 lg:px-8">
        {/* Stats Grid */}
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
          <StatCard 
            title="Total Children" 
            value={stats.totalChildren} 
            icon={<Users className="h-6 w-6 text-blue-500" />}
            trend="+2.5% from last month"
          />
          <StatCard 
            title="Available for Adoption" 
            value={stats.availableForAdoption}
            icon={<Heart className="h-6 w-6 text-green-500" />}
            trend="+5% from last month"
          />
          <StatCard 
            title="Successfully Adopted" 
            value={stats.adopted}
            icon={<Gift className="h-6 w-6 text-purple-500" />}
            trend="+12% from last month"
          />
          <StatCard 
            title="Recent Activity" 
            value={stats.recentActivity}
            icon={<Activity className="h-6 w-6 text-yellow-500" />}
            trend="+8% from last month"
          />
        </div>

        <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
          {/* Children Overview */}
          <div className="lg:col-span-2">
            <Card>
              <CardHeader className="border-b">
                <div className="flex justify-between items-center">
                  <CardTitle>Children Overview</CardTitle>
                  <Button variant="ghost" size="sm" asChild>
                    <Link href="/dashboard/orphanage/children">View All</Link>
                  </Button>
                </div>
              </CardHeader>
              <CardContent className="p-0">
                {children.length > 0 ? (
                  <div className="divide-y">
                    {children.slice(0, 5).map((child) => (
                      <div key={child.id} className="p-4 hover:bg-gray-50 transition-colors">
                        <div className="flex justify-between items-center">
                          <div>
                            <p className="font-medium">{child.firstName} {child.lastName}</p>
                            <p className="text-sm text-gray-500">
                              {new Date().getFullYear() - new Date(child.dateOfBirth).getFullYear()} years old
                            </p>
                          </div>
                          <span className={`px-2 py-1 text-xs rounded-full ${
                            child.isAdopted 
                              ? 'bg-green-100 text-green-800' 
                              : 'bg-blue-100 text-blue-800'
                          }`}>
                            {child.isAdopted ? 'Adopted' : 'Available'}
                          </span>
                        </div>
                      </div>
                    ))}
                  </div>
                ) : (
                  <div className="p-6 text-center text-gray-500">
                    No children registered yet. Add your first child to get started.
                  </div>
                )}
              </CardContent>
              <CardFooter className="border-t">
                <Button variant="ghost" size="sm" className="w-full" asChild>
                  <Link href="/dashboard/orphanage/children/new" className="flex items-center justify-center">
                    <PlusCircle className="mr-2 h-4 w-4" />
                    Add New Child
                  </Link>
                </Button>
              </CardFooter>
            </Card>
          </div>

          {/* Quick Stats */}
          <div className="space-y-6">
            <Card>
              <CardHeader>
                <CardTitle>Orphanage Details</CardTitle>
              </CardHeader>
              <CardContent className="space-y-4">
                <div>
                  <p className="text-sm font-medium text-gray-500">Contact Email</p>
                  <p>{orphanage.email}</p>
                </div>
                <div>
                  <p className="text-sm font-medium text-gray-500">Phone</p>
                  <p>{orphanage.phone || 'Not provided'}</p>
                </div>
                <div>
                  <p className="text-sm font-medium text-gray-500">Location</p>
                  <p>{[orphanage.city, orphanage.state, orphanage.country].filter(Boolean).join(', ')}</p>
                </div>
                <div>
                  <p className="text-sm font-medium text-gray-500">Capacity</p>
                  <p>{orphanage.capacity || 'Not specified'}</p>
                </div>
              </CardContent>
            </Card>

            <Card>
              <CardHeader>
                <CardTitle>Quick Actions</CardTitle>
              </CardHeader>
              <CardContent className="space-y-4">
                <Button variant="outline" className="w-full justify-start" asChild>
                  <Link href="/dashboard/orphanage/children/new">
                    <UserPlus className="mr-2 h-4 w-4" />
                    Add New Child
                  </Link>
                </Button>
                <Button variant="outline" className="w-full justify-start" asChild>
                  <Link href="/dashboard/orphanage/children">
                    <Users className="mr-2 h-4 w-4" />
                    View All Children
                  </Link>
                </Button>
                <Button variant="outline" className="w-full justify-start" asChild>
                  <Link href="/dashboard/orphanage/edit">
                    <BarChart3 className="mr-2 h-4 w-4" />
                    Edit Orphanage Profile
                  </Link>
                </Button>
              </CardContent>
            </Card>
          </div>
        </div>
      </main>
    </div>
  );
}
